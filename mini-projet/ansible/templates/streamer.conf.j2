# Configuration générale de Nginx
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuration SSL (si nécessaire)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Serveur HTTP pour rediriger vers HTTPS
    server {
        listen 80;
        server_name {{ domain }};
        return 301 https://$host$request_uri;
    }

    # Serveur HTTPS pour servir les fichiers HLS
    server {
        listen 443 ssl;
        server_name {{ domain }};

        ssl_certificate /etc/letsencrypt/live/{{ domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ domain }}/privkey.pem;

        location / {
            root /var/www/html;
            index index.html index.htm;
            add_header Cache-Control "public, max-age=3600";
        }

        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
    }
}

# Configuration RTMP pour le streaming
rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application live {
            live on;
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3s;
            hls_playlist_length 60s;
        }
    }
}
